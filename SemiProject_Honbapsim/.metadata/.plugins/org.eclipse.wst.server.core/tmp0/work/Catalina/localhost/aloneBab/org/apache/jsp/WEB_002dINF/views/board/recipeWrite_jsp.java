/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-07-15 07:38:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class recipeWrite_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1718959152000L));
    _jspx_dependants.put("jar:file:/D:/SemiProject_Honbapsim/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Semi_Project/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("     \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>레시피 적는중</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz\" crossorigin=\"anonymous\"></script>    \r\n");
      out.write("<link href='");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("' rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("<style></style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body id=\"recipe-body\">\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div style=\"margin-left: 10rem !important; margin-right: 10rem !important; margin-top:7rem !important;\" class=\"row py-lg-5\">\r\n");
      out.write("	   \r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<!-- 1번째 칸 -->\r\n");
      out.write("<form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/insertRecipe.re\" method=\"POST\" id=\"recipeForm\" enctype=\"multipart/form-data\" onsubmit=\"return doNot();\">	\r\n");
      out.write("	<div>\r\n");
      out.write("		<div id=\"tbdiv3\" class=\"row text-center div-flexible col div-min-width\">\r\n");
      out.write("	\r\n");
      out.write("			<table class=\"tbround bgcw\" style=\"width:100%;\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"td-rightline\" colspan='2' rowspan='3' style=\"width:28%\">\r\n");
      out.write("						<input class=\"form-control form-control-lg td-input\" id=\"formFileLg\" type=\"file\" name=\"file\" accept=\"image/*\" onchange=\"previewIMG(this);\">\r\n");
      out.write("						<img id=\"firImg\">\r\n");
      out.write("					</td>\r\n");
      out.write("				<td class=\"td-bottomline\" colspan='3' height=\"44px\" width=\"50px\">\r\n");
      out.write("					\r\n");
      out.write("					<input class=\"td-input\" type=\"text\" name=\"title\" style=\"font-size:20px;width:100%;height:40px; border: 0; text-align:center;\" placeholder=\"요리명\"/>\r\n");
      out.write("					\r\n");
      out.write("				</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr style=\"display:flex;justify-content:center;\">\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"recipe-option\">	\r\n");
      out.write("							<select id=\"sel-nation\" class=\"form-select form-select-sm\" name=\"nation\">\r\n");
      out.write("							  <option value=\"all\" disabled>국가</option>\r\n");
      out.write("							  <option value=\"kr\" selected>한식</option>\r\n");
      out.write("							  <option value=\"cn\">중식</option>\r\n");
      out.write("							  <option value=\"us\">양식</option>\r\n");
      out.write("							  <option value=\"jp\">일식</option>\r\n");
      out.write("							  <option value=\"no\">분식</option>\r\n");
      out.write("							</select>	\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"recipe-option\">\r\n");
      out.write("							<select id=\"sel-easy\"class=\"form-select form-select-sm\" name=\"difficulty\">\r\n");
      out.write("							  <option value=\"all\" disabled>난이도</option>\r\n");
      out.write("							  <option value=\"easy\" selected>하</option>\r\n");
      out.write("							  <option value=\"mid\">중</option>\r\n");
      out.write("							  <option value=\"hard\">상</option>\r\n");
      out.write("							</select>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td></td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td class=\"td-underline td-rlline td-topline\" colspan=\"3\" height=\"300px\" width=\"50px\">\r\n");
      out.write("						<textarea name=\"ingredients\" class=\"td-textarea\"rows='5' placeholder=\"요리 재료\" style=\"width:100%;height:90%;padding-left:30px;\"></textarea>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!-- 2번째 칸 -->\r\n");
      out.write("	<div class=\"row mb-3 text-center div-min-width\" style=\"margin-bottom:1rem !important;margin-left:auto; margin-right:auto; height:100px;width:70%\">\r\n");
      out.write("		<table class=\"tbround bgcw\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td width=\"200px\" height=\"50px\" style=\"border-right:0.5px solid black;text-align:center;\">요리 소개</td>\r\n");
      out.write("				<td width=\"\" height=\"60px\" style=\"padding-left:50px\">\r\n");
      out.write("					<textarea id=\"text-ingre\" name=\"intro\" class=\"td-textarea\" rows='2' maxlength=\"50\" placeholder=\"55글자 이내로 적어주세요\"></textarea>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<!-- 3번째 칸 -->\r\n");
      out.write("	<div class=\"row text-center div-min-width\" style=\"margin-left:auto; margin-right:auto;width:70%;\">\r\n");
      out.write("		<table class=\"tbround bgcw\">\r\n");
      out.write("			<!-- 아래 버튼 클릭 -> tr부분 테이블 안에 추가 -->\r\n");
      out.write("			<tbody id=\"table_body\">\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td style=\"width:150px; text-align:center;font-size:30px\">step1</td>\r\n");
      out.write("					<td class=\"td-jus-con previewImg\">\r\n");
      out.write("						<div class=\"slim-border mb-3 text-center td-div-img\">\r\n");
      out.write("							<input class=\"form-control form-control-lg input-image\" type=\"file\" accept=\"image/*\" name=\"file\">\r\n");
      out.write("							<img class=\"preview\" />\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<div class=\"slim-border mb-3 text-center div-textarea pad-top50\">\r\n");
      out.write("							<textarea class=\"making-num \" placeholder=\"해당 순서의 레시피를 작성해 주세요\"></textarea>\r\n");
      out.write("						</div>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("	<script>\r\n");
      out.write("	window.onload=()=>{\r\n");
      out.write("		const tbody = document.getElementById(\"table_body\");\r\n");
      out.write("		tbody.addEventListener('mouseout',e=>{\r\n");
      out.write("			\r\n");
      out.write("			const eventTarget = e.target;\r\n");
      out.write("			\r\n");
      out.write("			const targetTagName = eventTarget.tagName.toLowerCase();\r\n");
      out.write("			let targetSVG = null;\r\n");
      out.write("			switch(targetTagName){\r\n");
      out.write("			case 'tr' : targetInput = eventTarget.children[0].children[0].children[0];break;\r\n");
      out.write("			case 'td' : targetInput = eventTarget.parentElement.children[0].children[0].children[0];break;\r\n");
      out.write("			case 'div' : targetInput = eventTarget.parentElement.parentElement.children[0].children[0].children[0];break;\r\n");
      out.write("			case 'textarea' : targetInput = eventTarget.parentElement.parentElement.parentElement.children[0].children[0].children[0];break;\r\n");
      out.write("			}\r\n");
      out.write("			const imgPre = targetInput.nextElementSibling;\r\n");
      out.write("			var fReader = new FileReader();\r\n");
      out.write("			fReader.onload = function(event){\r\n");
      out.write("				imgPre.src = event.target.result;\r\n");
      out.write("				imgPre.style.width = '250px';\r\n");
      out.write("				impPre.style.height = '250px';\r\n");
      out.write("			};\r\n");
      out.write("			fReader.readAsDataURL(targetInput.files[0]);\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("		/* function readURL(input){\r\n");
      out.write("			var imgArr = document.getElementsByClassName(\"preview\");\r\n");
      out.write("				if(input.files[0]){\r\n");
      out.write("					var trNo = document.getElementById(\"table_body\").childElementCount;\r\n");
      out.write("					if(imgArr.length == trNo){\r\n");
      out.write("						var reader = new FileReader();\r\n");
      out.write("						reader.onload = function(e){\r\n");
      out.write("							imgArr[trNo-1].src = e.target.result;\r\n");
      out.write("							imgArr[trNo-1].style.width = '250px';\r\n");
      out.write("							imgArr[trNo-1].style.height = '250px';\r\n");
      out.write("						};\r\n");
      out.write("					reader.readAsDataURL(input.files[0]);\r\n");
      out.write("					} else{\r\n");
      out.write("					imgArr[0].src = \"\";\r\n");
      out.write("					}\r\n");
      out.write("				}		\r\n");
      out.write("		} */\r\n");
      out.write("		function previewIMG(This){\r\n");
      out.write("			var firImg = document.getElementById(\"firImg\");\r\n");
      out.write("			if(This.files[0]){\r\n");
      out.write("				var reader = new FileReader();\r\n");
      out.write("				reader.onload = function(e){\r\n");
      out.write("					firImg.src = e.target.result;\r\n");
      out.write("					firImg.style.width = '350px';\r\n");
      out.write("					firImg.style.height= '350px';\r\n");
      out.write("				};\r\n");
      out.write("				reader.readAsDataURL(This.files[0]);\r\n");
      out.write("			}else{\r\n");
      out.write("				firImg.src = \"\";\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("		<div>&nbsp;</div>\r\n");
      out.write("		<div class=\"div-flexible div-center\" style=\"height: 50px\">\r\n");
      out.write("			<div>\r\n");
      out.write("				<button class=\"btn btn-primary me-md-2\" id=\"plus-level\" type=\"button\" onclick=\"add_tr('table_body')\">단계 추가</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div>\r\n");
      out.write("				<button class=\"btn btn-primary me-md-2\" id=\"minus-level\" type=\"button\" onclick=\"delete_tr('this')\">단계 삭제</button>\r\n");
      out.write("			</div>\r\n");
      out.write("	   </div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<input type=\"hidden\" name=\"content\" id=\"inputContent\"/>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		function getAllMaking(){\r\n");
      out.write("			const textareas = document.getElementsByClassName(\"making-num\");\r\n");
      out.write("			let textvalue = \"\";\r\n");
      out.write("			for(const i of textareas){\r\n");
      out.write("				textvalue += i.value+'§§●';\r\n");
      out.write("			}\r\n");
      out.write("			document.getElementById(\"inputContent\").value = textvalue;\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function doNot(){\r\n");
      out.write("			const inputs = document.getElementsByName(\"file\");\r\n");
      out.write("			let count = 0;\r\n");
      out.write("			for(const f of inputs){\r\n");
      out.write("				console.log(f.value);\r\n");
      out.write("				if(f.value == \"\"){\r\n");
      out.write("					count = count + 1;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			if(count>0){ // count>0 -> 이미지 빈칸이 있다\r\n");
      out.write("				alert(\"이미지를 모두 넣어주세요\");\r\n");
      out.write("				return false;\r\n");
      out.write("			} else{\r\n");
      out.write("				return true;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function add_tr(table_body){\r\n");
      out.write("			let tbody = document.getElementById(\"table_body\");\r\n");
      out.write("			const newTr = document.createElement('tr');\r\n");
      out.write("			newTr.innerHTML = '<td style=\"width:150px; text-align:center;font-size:30px\"></td><td class=\"td-jus-con previewImg\"><div class=\"slim-border mb-3 text-center td-div-img\"><input class=\"form-control form-control-lg input-image\" type=\"file\" accept=\"image/*\" name=\"file\"><img class=\"preview\" /></div></td><td><div class=\"slim-border mb-3 text-center div-textarea pad-top50\"><textarea class=\"making-num \" placeholder=\"한 단계씩 추가해 주세요\"></textarea></div></td>';\r\n");
      out.write("			tbody.append(newTr);\r\n");
      out.write("			let trCount = tbody.childElementCount;\r\n");
      out.write("			tbody.lastElementChild.children[0].innerText = 'step' + trCount;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		$('#plus-level').mouseup\r\n");
      out.write("		\r\n");
      out.write("		function clean_first_tr(firstTr){\r\n");
      out.write("			let children = firstTr.children;\r\n");
      out.write("			\r\n");
      out.write("			children = Array.isArray(children) ? children :	Object.values(children);\r\n");
      out.write("			children.forEach(x=>{\r\n");
      out.write("				if(x !== firstTr.latsElementChild){\r\n");
      out.write("					x.firstElementChild.value='';\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		function delete_tr(This){\r\n");
      out.write("			var trs = document.getElementById(\"table_body\");\r\n");
      out.write("			if(trs.childElementCount<=1){\r\n");
      out.write("				alert(\"1개 이상의 순서를 적어주세요.\");\r\n");
      out.write("			} else{\r\n");
      out.write("				trs.lastChild.remove();\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<div>&nbsp;</div>\r\n");
      out.write("		\r\n");
      out.write("	<div class=\"mx-auto\" style=\"width:80px;\">\r\n");
      out.write("		<button class=\"btn btn-primary me-md-2\" type=\"submit\" id=\"go_list_button\" onclick=\"getAllMaking();\">등록</button>\r\n");
      out.write("	</div>\r\n");
      out.write("	<div>&nbsp;</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</form>	\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/board/recipeWrite.jsp(11,12) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/resources/css/allCss.css");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
