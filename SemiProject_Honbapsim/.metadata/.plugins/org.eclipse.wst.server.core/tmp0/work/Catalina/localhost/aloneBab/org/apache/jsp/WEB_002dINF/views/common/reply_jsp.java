/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-07-19 03:30:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1718959152000L));
    _jspx_dependants.put("jar:file:/D:/SemiProject_Honbapsim/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Semi_Project/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("	#reply_table{background:white;\r\n");
      out.write("				width: 70%; \r\n");
      out.write("				margin-top:15px;\r\n");
      out.write("				margin-left:15%;		\r\n");
      out.write("				padding: 20px;			\r\n");
      out.write("				border: 1px solid lightgray; border-radius:10px;\r\n");
      out.write("				font-family: 'MinSans-Regular';}\r\n");
      out.write("	\r\n");
      out.write("	tbody{font-size:18px;}\r\n");
      out.write("				\r\n");
      out.write("	#reply_write_button{background:#f24822; \r\n");
      out.write("					color: white;\r\n");
      out.write("					width:110px;\r\n");
      out.write("					border:none; \r\n");
      out.write("					border-radius:10px;\r\n");
      out.write("					height:40px;\r\n");
      out.write("					text-decoration:none; \r\n");
      out.write("					font-size:18px\r\n");
      out.write("					}\r\n");
      out.write("	\r\n");
      out.write("	.reply_{background:#b3b3b3; \r\n");
      out.write("						color:white; \r\n");
      out.write("						width:60px;\r\n");
      out.write("						height:35px;\r\n");
      out.write("						border:none; \r\n");
      out.write("						border-radius:10px;\r\n");
      out.write("						text-decoration:none; \r\n");
      out.write("						font-size:15px;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("			\r\n");
      out.write("	<div id=\"reply_table\">	\r\n");
      out.write("		<table class=\"table\">\r\n");
      out.write("			<thead>\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("				");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("		    </thead>\r\n");
      out.write("		    <tbody id=\"replyTbody\" class=\"table-group-divider\" style=\"text-align:center;\">\r\n");
      out.write("				");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>		\r\n");
      out.write("	</div>						\r\n");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("\r\n");
      out.write("			const replyWriteButton = document.getElementById(\"reply_write_button\");		\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			const inputCSS = function(){\r\n");
      out.write("				const inputs = document.getElementsByTagName(\"input\")\r\n");
      out.write("				if(inputs != null){\r\n");
      out.write("					for(const input of inputs ){\r\n");
      out.write("						input.addEventListener('focus', function(){\r\n");
      out.write("							this.style.boxShadow = 'none';\r\n");
      out.write("							this.style.borderColor = \"#b3b3b3\";\r\n");
      out.write("						});\r\n");
      out.write("					}				\r\n");
      out.write("				}				\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("						\r\n");
      out.write("			inputCSS();\r\n");
      out.write("			\r\n");
      out.write("			if(replyWriteButton != null){\r\n");
      out.write("				replyWriteButton.addEventListener('mouseover',function(){\r\n");
      out.write("					this.style.background = \"#a5250a\";\r\n");
      out.write("					this.style.fontFamily ='MinSans-Bold';\r\n");
      out.write("				});\r\n");
      out.write("				replyWriteButton.addEventListener('mouseout',function(){\r\n");
      out.write("					this.style.fontFamily = 'MinSans-Bold';\r\n");
      out.write("					this.style.background =\"#f24822\";\r\n");
      out.write("				});	\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("\r\n");
      out.write("					\r\n");
      out.write("			if(replyWriteButton != null){ \r\n");
      out.write("				replyWriteButton.addEventListener('click',()=>{\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/insertReply.bo',\r\n");
      out.write("						data : { boardNo : ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${b.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(", rpWriter :'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', rpContent : document.getElementById(\"insertReply\").value},\r\n");
      out.write("						dataType : 'json',\r\n");
      out.write("						success : data =>{\r\n");
      out.write("							console.log(data)\r\n");
      out.write("							const replyTbody = document.getElementById('replyTbody');							\r\n");
      out.write("							const replyTbodyFirstChlidren = replyTbody.firstElementChild;\r\n");
      out.write("							const insertTr = document.createElement('tr'); \r\n");
      out.write("							\r\n");
      out.write("							\r\n");
      out.write("							let inner =	'<td style=\"width:15%;\" scope=\"row\">'+data.writer+'</td>'\r\n");
      out.write("									+'<td style=\"width:45%; text-align:left;\">'+data.content+'</td>'\r\n");
      out.write("									+'<td style=\"width:20%; min-width:160px; text-align:right;\">'\r\n");
      out.write("									+'<input type=\"hidden\" size=\"40\" name=\"replyNo\" value=\"'+data.replyNo+'\">'\r\n");
      out.write("									+'<button class=\"btn btn-primary me-md-2 reply_ update_\" style=\"background:#b3b3b3; width:60px; border-color:#b3b3b3; font-size: 15px;\" role=\"button\">수정</button>&nbsp'\r\n");
      out.write("									+'<button class=\"btn btn-primary me-md-2 reply_ delete_\" style=\"background:#b3b3b3; width:60px; border-color:#b3b3b3; font-size: 15px;\" role=\"button\">삭제</button></td>'\r\n");
      out.write("									+'<td style=\"width:20%;\">'+data.updateDate+'</td>'\r\n");
      out.write("														\r\n");
      out.write("					    	insertTr.innerHTML = inner;\r\n");
      out.write("					    	replyTbody.insertBefore(insertTr, replyTbodyFirstChlidren);			\r\n");
      out.write("					    	document.getElementById(\"insertReply\").value='';\r\n");
      out.write("					    	\r\n");
      out.write("					\r\n");
      out.write("						},						\r\n");
      out.write("						error : data => {\r\n");
      out.write("							console.log(data)\r\n");
      out.write("						}\r\n");
      out.write("					});\r\n");
      out.write("				});\r\n");
      out.write("					\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("			const replyUpButtons = document.getElementsByClassName(\"reply_ update_\");	\r\n");
      out.write("			const replyDelButtons = document.getElementsByClassName(\"reply_ delete_\");				\r\n");
      out.write("			const upDelButtons = document.getElementsByClassName('reply_');\r\n");
      out.write("			\r\n");
      out.write("			for(const upDelButton of upDelButtons){\r\n");
      out.write("				upDelButton.style.background = \"#b3b3b3\";\r\n");
      out.write("				upDelButton.style.borderColor = '#b3b3b3';\r\n");
      out.write("			}\r\n");
      out.write("						\r\n");
      out.write("			\r\n");
      out.write("			const replyTbody = document.querySelector('#replyTbody');\r\n");
      out.write("			if(replyTbody){\r\n");
      out.write("				replyTbody.addEventListener('click', (e)=>{\r\n");
      out.write("					const eventTarget = e.target;\r\n");
      out.write("					console.log(eventTarget)\r\n");
      out.write("					\r\n");
      out.write("					const tagetTagName = eventTarget.tagName.toLowerCase();\r\n");
      out.write("					if(tagetTagName == 'button'){\r\n");
      out.write("						const targetButton = eventTarget;	\r\n");
      out.write("						console.log(\"타겟\" + targetButton)\r\n");
      out.write("						\r\n");
      out.write("						if(targetButton != null){\r\n");
      out.write("							if(targetButton.className.includes('delete_')){\r\n");
      out.write("								console.log(\"딜\" + targetButton)\r\n");
      out.write("								const delTr = targetButton.parentElement.parentElement;\r\n");
      out.write("								$.ajax({\r\n");
      out.write("									url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/deleteReply.bo',\r\n");
      out.write("									data : {replyNo : targetButton.previousElementSibling.previousElementSibling.value},\r\n");
      out.write("									dataType : 'json',\r\n");
      out.write("									success : data =>{								\r\n");
      out.write("										if(data == \"0\"){\r\n");
      out.write("											delTr.remove();									\r\n");
      out.write("										}		\r\n");
      out.write("									},\r\n");
      out.write("									error : data => {\r\n");
      out.write("										console.log(data)\r\n");
      out.write("									}\r\n");
      out.write("								});\r\n");
      out.write("									\r\n");
      out.write("								\r\n");
      out.write("							}else if(targetButton.className.includes('update_')){\r\n");
      out.write("								console.log(\"업\" + targetButton)	\r\n");
      out.write("									if(targetButton.innerText != '등록'){\r\n");
      out.write("										const contentTd = targetButton.parentElement.previousElementSibling;\r\n");
      out.write("										const contentTdVal = contentTd.innerText;\r\n");
      out.write("										const inputTag = document.createElement('input');\r\n");
      out.write("										inputTag.className = 'form-control';\r\n");
      out.write("										inputTag.value = contentTdVal;\r\n");
      out.write("										\r\n");
      out.write("										contentTd.innerHTML='';\r\n");
      out.write("										contentTd.appendChild(inputTag);	\r\n");
      out.write("										\r\n");
      out.write("										\r\n");
      out.write("										targetButton.innerText = '등록'\r\n");
      out.write("										inputCSS();\r\n");
      out.write("										\r\n");
      out.write("										\r\n");
      out.write("										if(targetButton.innerText == '등록'){\r\n");
      out.write("											const contentTd = targetButton.parentElement.previousElementSibling;\r\n");
      out.write("											targetButton.addEventListener('click', function(){\r\n");
      out.write("												if(contentTd){\r\n");
      out.write("													 if(contentTd.firstElementChild != null){\r\n");
      out.write("														 $.ajax({\r\n");
      out.write("																url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/updateReply.bo',\r\n");
      out.write("																data : {replyNo : targetButton.previousElementSibling.value , content :contentTd.firstElementChild.value},\r\n");
      out.write("															 	dataType : 'json',\r\n");
      out.write("															 	success : data => {\r\n");
      out.write("															 		\r\n");
      out.write("															 		contentTd.innerHTML='';\r\n");
      out.write("															 		contentTd.innerText = data.content;\r\n");
      out.write("															 		this.innerText = '수정';\r\n");
      out.write("															 		//location.reload()\r\n");
      out.write("														 										 		\r\n");
      out.write("															 	},\r\n");
      out.write("															 	error : data => {\r\n");
      out.write("																	console.log(data)\r\n");
      out.write("																}\r\n");
      out.write("															});				\r\n");
      out.write("														 													 \r\n");
      out.write("													 }								\r\n");
      out.write("														\r\n");
      out.write("										\r\n");
      out.write("												}\r\n");
      out.write("											});\r\n");
      out.write("										}\r\n");
      out.write("									\r\n");
      out.write("									}	\r\n");
      out.write("							}						\r\n");
      out.write("						}							\r\n");
      out.write("					}\r\n");
      out.write("															\r\n");
      out.write("				});\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/common/reply.jsp(55,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${!empty loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					<tr id=\"replyInsertTr\">\r\n");
          out.write("						<td style=\"width:15%; font-family: 'MinSans-Bold'; text-align:center;\" scope=\"row\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginUser.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("						<td style=\"width:65%;\" colspan=\"2\">						\r\n");
          out.write("							<input type=\"text\" class=\"form-control\" name=\"content\" id=\"insertReply\" size=\"40\" placeholder=\"40자 이내의 댓글을 입력하세요\">\r\n");
          out.write("						</td>\r\n");
          out.write("						<td style=\"width:15%;text-align:center;\" scope=\"col\">\r\n");
          out.write("							<button class=\"btn btn-primary me-md-2\" type=\"button\" id =\"reply_write_button\">등록</button>\r\n");
          out.write("						</td>\r\n");
          out.write("					</tr>\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/common/reply.jsp(66,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty loginUser}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			    	<tr>\r\n");
          out.write("			    		<th scope=\"col\" style=\"width:15%; font-family: 'MinSans-Bold'; text-align:center;\">아이디</th>\r\n");
          out.write("			      		<th scope=\"col\" colspan=\"2\" style=\"width:65%; font-family: 'MinSans-Bold'; text-align:center;\">댓글</th>\r\n");
          out.write("			      		<th scope=\"col\" style=\"width: 20%; font-family: 'MinSans-Bold'; text-align:center;\">등록일</th>				      	\r\n");
          out.write("			    	</tr>\r\n");
          out.write("		    	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/common/reply.jsp(75,4) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/common/reply.jsp(75,4) '${rpList}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${rpList}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/common/reply.jsp(75,4) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("rl");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("					<tr id=\"replyListTr\">		\r\n");
            out.write("						");
            if (_jspx_meth_c_005fif_005f2(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\r\n");
            out.write("						");
            if (_jspx_meth_c_005fif_005f3(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("							\r\n");
            out.write("					</tr>\r\n");
            out.write("				");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f2_reused = false;
    try {
      _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/common/reply.jsp(77,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ !empty loginUser && loginUser.id == rl.writer}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
      if (_jspx_eval_c_005fif_005f2 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("				\r\n");
          out.write("					    	<td style=\"width:15%;\" scope=\"row\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("					    	<td	style=\"width:45%; text-align:left;\" >");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>			   \r\n");
          out.write("					    	<td style=\"width:20%; min-width:160px; text-align:right;\">\r\n");
          out.write("					    		<input type=\"hidden\" name=\"replyNo\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.replyNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("					    		<button class=\"btn btn-primary me-md-2 reply_ update_\" role=\"button\">수정</button>\r\n");
          out.write("								<button class=\"btn btn-primary me-md-2 reply_ delete_\" role=\"button\">삭제</button>\r\n");
          out.write("							</td>\r\n");
          out.write("							<td style=\"width:20%;\" class=\"rListDate\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.updateDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>	\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
      _jspx_th_c_005fif_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f2, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f2_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f3 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f3_reused = false;
    try {
      _jspx_th_c_005fif_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/common/reply.jsp(87,6) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f3.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${ (!empty loginUser || empty loginUser )&& loginUser.id != rl.writer}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f3 = _jspx_th_c_005fif_005f3.doStartTag();
      if (_jspx_eval_c_005fif_005f3 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("							<td style=\"width:15%;\" scope=\"row\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>\r\n");
          out.write("					    	<td	style=\"width:65%; text-align:left;\" colspan=\"2\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>	\r\n");
          out.write("					    	<td style=\"width:20%;\" class=\"rListDate\">");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${rl.updateDate}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("</td>			   	\r\n");
          out.write("						");
          int evalDoAfterBody = _jspx_th_c_005fif_005f3.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f3);
      _jspx_th_c_005fif_005f3_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f3, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f3_reused);
    }
    return false;
  }
}
