/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-07-18 10:17:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class randomMenu_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\"/>\r\n");
      out.write("<link href=\"resources/css/randomMainPage.css\" rel=\"stylesheet\" type=\"text/css\"/>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<div class=\"container-fluid\">\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"random_title\">\r\n");
      out.write("    		<p>오늘의 혼밥심</p>\r\n");
      out.write("  		</div>\r\n");
      out.write("\r\n");
      out.write("		<form id=\"form\">\r\n");
      out.write("			<div id = \"choice\">					\r\n");
      out.write("				<p id=\"info\">선택한 카테고리에 맞는 혼밥 메뉴 레시피를 추천해드립니다.</p>\r\n");
      out.write("				\r\n");
      out.write("				<div id = \"nation\">\r\n");
      out.write("					<input type=\"checkbox\" name=\"nation\" value=\"kr\" class=\"btn-check\" id=\"nation1\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"nation1\">한식</label>\r\n");
      out.write("					\r\n");
      out.write("					<input type=\"checkbox\" name=\"nation\" value=\"cn\" class=\"btn-check\" id=\"nation2\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"nation2\">중식</label>\r\n");
      out.write("					\r\n");
      out.write("					<input type=\"checkbox\" name=\"nation\" value=\"jp\" class=\"btn-check\" id=\"nation3\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"nation3\">일식</label>\r\n");
      out.write("					\r\n");
      out.write("					<input type=\"checkbox\" name=\"nation\" value=\"us\" class=\"btn-check\" id=\"nation4\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"nation4\">양식</label>\r\n");
      out.write("					\r\n");
      out.write("					<input type=\"checkbox\" name=\"nation\" value=\"no\" class=\"btn-check\" id=\"nation5\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"nation5\">분식</label>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div id = \"difficulty\">\r\n");
      out.write("					<input type=\"checkbox\" name=\"difficulty\" value=\"easy\" class=\"btn-check\" id=\"difficulty1\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"difficulty1\">손쉬움</label>\r\n");
      out.write("					\r\n");
      out.write("					<input type=\"checkbox\" name=\"difficulty\" value=\"mid\" class=\"btn-check\" id=\"difficulty2\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"difficulty2\">평범함</label>\r\n");
      out.write("					\r\n");
      out.write("					<input type=\"checkbox\" name=\"difficulty\" value=\"hard\" class=\"btn-check\" id=\"difficulty3\" autocomplete=\"off\">\r\n");
      out.write("					<label class=\"btn\" for=\"difficulty3\">어려움</label>				\r\n");
      out.write("				</div>			\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"mx-auto\" id=\"img_div\">\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"mx-auto\" style=\"width:160px;\">\r\n");
      out.write("				<button class=\"btn btn-primary me-md-2\" type=\"button\" id =\"submit_button\">?</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>	\r\n");
      out.write("		\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/topButton.jsp", out, false);
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	</div>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("		window.onload=()=>{\r\n");
      out.write("			const checkboxs = document.querySelectorAll('input[type=checkbox]');\r\n");
      out.write("			\r\n");
      out.write("			for(checkbox of checkboxs){		\r\n");
      out.write("				checkbox.addEventListener('change', function(){\r\n");
      out.write("					const label = this.nextElementSibling;\r\n");
      out.write("	\r\n");
      out.write("					if(this.checked){									\r\n");
      out.write("						label.style.border = '4px solid #f24822';					\r\n");
      out.write("					}else{\r\n");
      out.write("						label.style.border = '2px solid lightgray';\r\n");
      out.write("					}	\r\n");
      out.write("					\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			const submitButton = document.getElementById(\"submit_button\");\r\n");
      out.write("			\r\n");
      out.write("			submitButton.addEventListener('mouseover',function(){\r\n");
      out.write("				this.style.fontSize = \"65px\";\r\n");
      out.write("			})\r\n");
      out.write("			submitButton.addEventListener('mouseout',function(){\r\n");
      out.write("				this.style.fontSize = \"55px\";\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			submitButton.addEventListener('click', ()=>{				\r\n");
      out.write("				var form = $(\"#form\").serialize();	\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					\r\n");
      out.write("					url : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/randomChoice.re',\r\n");
      out.write("					type : 'GET',\r\n");
      out.write("					data : {form:form},\r\n");
      out.write("					dataType : 'json',\r\n");
      out.write("					success : data => {	\r\n");
      out.write("						if(data == '0'){\r\n");
      out.write("							const string = '<p id=\"not\">카테고리를 선택해주세요.</p>';\r\n");
      out.write("							$('#img_div').html(string);	\r\n");
      out.write("							\r\n");
      out.write("							$('#img_div').css('border','1px solid lightgray');\r\n");
      out.write("							$('#img_div').css('background','white');\r\n");
      out.write("							$('#img_div').css('border-radius','10px');\r\n");
      out.write("							$('#img_div').css('width','54%');\r\n");
      out.write("							$('#img_div').css('height','60px');\r\n");
      out.write("							$('#img_div').css('margin-left','23%');\r\n");
      out.write("							$('#img_div').css('margin-top','15px');\r\n");
      out.write("							$('#img_div').css('font-size','23px');\r\n");
      out.write("							$('#img_div').css('font-weight','700');\r\n");
      out.write("							$('#img_div').css('text-align','center');\r\n");
      out.write("							$('#img_div').css('line-height','60px');\r\n");
      out.write("														\r\n");
      out.write("						}else if(data == '1'){\r\n");
      out.write("							const string = '<p id=\"not\">해당 카테고리에 등록된 레시피가 아직 없어요.</n> 자신만의 레시피를 등록해 보는건 어떠세요?</p>';\r\n");
      out.write("							$('#img_div').html(string);	\r\n");
      out.write("							\r\n");
      out.write("							$('#img_div').css('border','1px solid lightgray');\r\n");
      out.write("							$('#img_div').css('background','white');\r\n");
      out.write("							$('#img_div').css('border-radius','10px');\r\n");
      out.write("							$('#img_div').css('width','54%');\r\n");
      out.write("							$('#img_div').css('height','60px');\r\n");
      out.write("							$('#img_div').css('margin-left','23%');\r\n");
      out.write("							$('#img_div').css('margin-top','15px');\r\n");
      out.write("							$('#img_div').css('font-size','18px');\r\n");
      out.write("							$('#img_div').css('font-weight','700');\r\n");
      out.write("							$('#img_div').css('text-align','center');\r\n");
      out.write("							$('#img_div').css('line-height','60px');\r\n");
      out.write("			\r\n");
      out.write("						}else{\r\n");
      out.write("						\r\n");
      out.write("							const string = '<p id=\"img_title\">'+data.title+'</p><img id=\"img\" width=\"350px\" height=\"350px\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/image/' +data.imageName+'\"/>';\r\n");
      out.write("							$('#img_div').html(string);					\r\n");
      out.write("							\r\n");
      out.write("							$('#img_div').css('border','1px solid lightgray');\r\n");
      out.write("							$('#img_div').css('background','white');\r\n");
      out.write("							$('#img_div').css('border-radius','10px');\r\n");
      out.write("							$('#img_div').css('width','54%');\r\n");
      out.write("							$('#img_div').css('min-width','400px');\r\n");
      out.write("							$('#img_div').css('height','480px');\r\n");
      out.write("							$('#img_div').css('margin-left','23%');\r\n");
      out.write("							$('#img_div').css('margin-top','20px');\r\n");
      out.write("							$('#img_div').css('font-size','15px');\r\n");
      out.write("							$('#img_div').css('font-weight','700');\r\n");
      out.write("							$('#img_div').css('text-align','center');\r\n");
      out.write("							\r\n");
      out.write("							$('#img_title').css('margin-top','15px');\r\n");
      out.write("							$('#img_title').css('color','black');\r\n");
      out.write("							$('#img').css('height','350px');\r\n");
      out.write("							$('#img').css('margin-top','5px');\r\n");
      out.write("							$('#img').css('cursor', 'pointer');\r\n");
      out.write("							\r\n");
      out.write("							const img = document.querySelector('#img');\r\n");
      out.write("							\r\n");
      out.write("							img.addEventListener('click', function(){\r\n");
      out.write("								location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/recipeContent.re?bNo='+data.boardNo+'&rNo='+data.recipeNo\r\n");
      out.write("								\r\n");
      out.write("							})\r\n");
      out.write("							\r\n");
      out.write("						}\r\n");
      out.write("					},\r\n");
      out.write("					error : data => {\r\n");
      out.write("\r\n");
      out.write("					}\r\n");
      out.write("										\r\n");
      out.write("				});			\r\n");
      out.write("			});\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("				\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
