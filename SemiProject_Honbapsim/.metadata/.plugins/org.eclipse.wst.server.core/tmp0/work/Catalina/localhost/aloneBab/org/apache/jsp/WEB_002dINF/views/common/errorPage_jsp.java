/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-07-18 08:11:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class errorPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    java.lang.Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);
    if (exception != null) {
      response.setStatus(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    }
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\" crossorigin=\"anonymous\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("   @font-face {\r\n");
      out.write("       font-family: 'MinSans-Regular';\r\n");
      out.write("       src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2201-2@1.0/MinSans-Regular.woff') format('woff');\r\n");
      out.write("       font-weight: normal;\r\n");
      out.write("       font-style: normal;\r\n");
      out.write("   }\r\n");
      out.write("   @font-face {\r\n");
      out.write("       font-family: 'MinSans-Bold';\r\n");
      out.write("       src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_2201-2@1.0/MinSans-Bold.woff') format('woff');\r\n");
      out.write("       font-weight: normal;\r\n");
      out.write("       font-style: normal;\r\n");
      out.write("   }\r\n");
      out.write(".container-fluid{background:#fffbf2; padding-top:100px; min-width: 1250px; min-height:1000px;\r\n");
      out.write("               font-family: 'MinSans-Regular'; font-size:20px}\r\n");
      out.write("               \r\n");
      out.write("#title{background:#f9ae98;\r\n");
      out.write("      width: 50%; height:50px;\r\n");
      out.write("      margin-left:25%;\r\n");
      out.write("      margin-block-end:0;\r\n");
      out.write("      text-align:center;\r\n");
      out.write("      text-decoration:none;\r\n");
      out.write("      font-size:25px; font-family: 'MinSans-Bold';\r\n");
      out.write("      line-height:50px; border-radius:5px;}\r\n");
      out.write("\r\n");
      out.write("#word{background:white;\r\n");
      out.write("   width:50%;\r\n");
      out.write("   margin-top:80px;\r\n");
      out.write("   margin-left:25%;\r\n");
      out.write("   padding:5%;\r\n");
      out.write("   border: 1px solid lightgray;\r\n");
      out.write("   border-radius:10px;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("#msg_div{margin-top:50px;}\r\n");
      out.write("\r\n");
      out.write("#msg{color: red; font-family: 'MinSans-Bold';}\r\n");
      out.write("\r\n");
      out.write("#button_div{margin-top:50px;\r\n");
      out.write("         text-align: center;}\r\n");
      out.write("\r\n");
      out.write(".btn{background:#b3b3b3; color:white; \r\n");
      out.write("   border:none; border-radius:10px;\r\n");
      out.write("   width:140px; height:60px;\r\n");
      out.write("   font-size:30px; font-family: 'MinSans-Bold';}\r\n");
      out.write("\r\n");
      out.write("#back_button{margin-left:50px;}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("   <div class=\"container-fluid\">\r\n");
      out.write("\r\n");
      out.write("      <div id=\"title\">\r\n");
      out.write("          <p>페이지 오류</p>\r\n");
      out.write("        </div>\r\n");
      out.write("      \r\n");
      out.write("      <div id=\"word\">\r\n");
      out.write("         <h5>페이지가 정상적으로 동작하지 않았습니다.</h5>\r\n");
      out.write("         <h5>Home 또는 이전 화면으로 돌아가 다시 시도해주세요. </h5>\r\n");
      out.write("         <h5>불편을 드려 죄송합니다. </h5>\r\n");
      out.write("         <div id=\"msg_div\">\r\n");
      out.write("            <p id=\"msg\"> 오류 원인 : </p>\r\n");
      out.write("            <p>");
      out.print( exception.getMessage() );
      out.write("</p>\r\n");
      out.write("         </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("      <div id =\"button_div\" >\r\n");
      out.write("         <a class=\"btn btn-primary me-md-2\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\" role=\"button\" id =\"home_button\">Home</a>\r\n");
      out.write("         <a class=\"btn btn-primary me-md-2\" href=\"javascript:history.back();\" role=\"button\" id =\"back_button\">Back</a>\r\n");
      out.write("      </div>\r\n");
      out.write("   \r\n");
      out.write("   </div>\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   <script type=\"text/javascript\">\r\n");
      out.write("   \r\n");
      out.write("   const as = document.getElementsByTagName(\"a\")\r\n");
      out.write("   for(a of as){\r\n");
      out.write("      a.addEventListener('mouseover',function(){\r\n");
      out.write("         this.style.background =\"#b3b3b3\";         \r\n");
      out.write("      })\r\n");
      out.write("   }\r\n");
      out.write("   </script>   \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
